<Application x:Class="LANshare.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:LANshare"
             xmlns:model="clr-namespace:LANshare.Model"
             ShutdownMode="OnExplicitShutdown">
    <Application.Resources>

        <!-- window header style -->
       
        <Style x:Key="windowHeaderStyle" TargetType="{x:Type Border}">
            <!--<Setter Property="HorizontalAlignment" Value="Center"/>-->
            <Setter Property="Height" Value="35" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>

        </Style>

        <!-- window header text style -->
        <Style x:Key="windowHeaderTextStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="LightGray" />
            <Setter Property="FontFamily" Value="Gadugi"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,-7,0,-7" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>


        <!-- Textfield style for static texts -->
        <Style x:Key="StaticTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="FontSize" Value="12"/>
            <!--<Setter Property="FontWeight" Value="Bold"/>-->
            <Setter Property="FontFamily" Value="Gadugi"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <!-- Textfield style for relevant text fields -->
        <Style x:Key="RelevantTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Gadugi"/>
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <!--standard style for every window-->

        <Style x:Key="StandardStyle" TargetType="{x:Type Window}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0"
                                  GlassFrameThickness="2"
                                  NonClientFrameEdges="None"
                                  ResizeBorderThickness="1"
                                            
                                            />
                </Setter.Value>
            </Setter>
            <!--<Setter Property="Height" Value="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}, Converter={model:RatioConverter}, ConverterParameter='0.6' }" />
            <Setter Property="Width" Value="{Binding Source={x:Static SystemParameters.PrimaryScreenWidth}, Converter={model:RatioConverter}, ConverterParameter='0.45' }" />-->

            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>

        <Style x:Key="StandardUsStyle" TargetType="{x:Type UserControl}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="0"
                                  GlassFrameThickness="2"
                                  NonClientFrameEdges="None"
                                  ResizeBorderThickness="1"
                                            
                                            />
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>


        <!--style of main grid-->
        <Style x:Key="windowStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Media/Images/ApplicationImages/polinet3.jpg"/>
                </Setter.Value>
            </Setter>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>
        <!-- style of grid with displayed info -->
        <Style x:Key="viewStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="#CC000000" />
            <Setter Property="SnapsToDevicePixels" Value="True"/>
        </Style>
        
        <!--style of listview item-->
        <Style x:Key="listViewStyle" TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="#CC000000" />
            <Setter Property="Foreground" Value="LightGray"/>
            <Setter Property="FontSize" Value="19"/>
            <Setter Property="FontFamily" Value="Gadugi"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>

        </Style>
        
        <!--style for context menus-->
        <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <!--<Setter Property="Height" Value="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}, Converter={model:RatioConverter}, ConverterParameter='0.15' }" />
            <Setter Property="Width" Value="{Binding Source={x:Static SystemParameters.PrimaryScreenWidth}, Converter={model:RatioConverter}, ConverterParameter='0.15' }" />-->

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="#FF05080C" BorderBrush="#FF7A7A7A" BorderThickness="2" Opacity="0.96">
                            <StackPanel ClipToBounds="True" Orientation="Vertical" IsItemsHost="True" Margin="5,4,5,4"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--control for menu items-->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
            <Border Name="Border" >
                <Grid>
                    <ContentPresenter Margin="6,3,6,3" ContentSource="Header" RecognizesAccessKey="True"  />
                </Grid>
            </Border>
            
        </ControlTemplate>

        <!--button style-->
        <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
            <Setter Property="Background" Value="#00DDDDDD" />
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="FontFamily" Value="Gadugi" />
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Margin" Value="20,4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}" >
                            <ContentPresenter x:Name="ContentPresenter"  Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}"   RecognizesAccessKey="True" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{x:Null}"/>
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="#FF004DF1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--text button style-->
        <Style x:Key="textButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#00DDDDDD" />
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="FontFamily" Value="Gadugi" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextElement.Foreground" Value="#FF004DF1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--window close button style-->
        <Style x:Key="closeButton" TargetType="{x:Type Button}">

            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Media/Images/ApplicationImages/buttonbg.png" Opacity="0"/>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF892626"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!--window general button style-->
        <Style x:Key="windowButton" TargetType="{x:Type Button}">

            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Media/Images/ApplicationImages/buttonbg.png" Opacity="0"/>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True"  >
                    <Setter Property="Background" Value="#FF4E4E53"/>
                </Trigger>
            </Style.Triggers>
        </Style>


        <!--base button style-->
        <Style x:Key="baseButton" TargetType="{x:Type Button}">

            <Setter Property="Background" Value="#FF3A3A3E" />
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="FontFamily" Value="Gadugi" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF4E4E53"/>
                </Trigger>
            </Style.Triggers>
        </Style>






        <!--Control colors.-->

        <Color x:Key="ControlLightColor">White</Color>
        <Color x:Key="ControlMediumColor">Turquoise</Color>
        <Color x:Key="ControlDarkColor">#c0f7f1</Color>



        <Color x:Key="ColorAbort">Red</Color>
        <Color x:Key="ColorAbortLight">IndianRed</Color>


        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#CC000000</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">#CC000000</Color>
        <Color x:Key="SliderTrackDarkColor">#CC000000</Color>

        <Color x:Key="NavButtonFrameColor">#CC000000</Color>

  
        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#9af9f0"
                    Offset="0" />
                    <GradientStop Color="White"
                    Offset="0.4" />
                    <GradientStop Color="White"
                    Offset="0.5" />
                    <GradientStop Color="#9af9f0"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
            
        </LinearGradientBrush>

        <Style x:Key="AnimatedBubble" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{StaticResource ProgressBarIndicatorAnimatedFill}">
                
            </Setter>
            <Style.Triggers>
                <DataTrigger  Binding="{Binding Status}" Value="Sending">
                    <Setter Property="Background" Value="Transparent">
                        
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>




        <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid MinHeight="14" MinWidth="50" Background="{TemplateBinding Background}">
                            <Border x:Name="PART_Track"
                            CornerRadius="5"
                            BorderThickness="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="White" Offset="0.0" />
                                                <GradientStop Color="Turquoise" Offset="1.0" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>

                                </Border.BorderBrush>
                            </Border>
                            <Border x:Name="PART_Indicator"
                            CornerRadius="5"
                            BorderThickness="1"
                            HorizontalAlignment="Left"
                                    
                            Background="{TemplateBinding Foreground}"
                            Margin="0,0,0,0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
                                        <GradientBrush.GradientStops>
                                            <GradientStopCollection>
                                                <GradientStop Color="White" Offset="0.0" />
                                                <GradientStop x:Name="gradient" Color="Turquoise" Offset="1.0" />
                                            </GradientStopCollection>
                                        </GradientBrush.GradientStops>
                                    </LinearGradientBrush>
                                    

                                </Border.BorderBrush>
                                <Grid ClipToBounds="True" Margin="4,-1,4,-1" x:Name="Animation">
                                    <Border Style="{StaticResource AnimatedBubble}" x:Name="PART_GlowRect"
                                         Width="30"
                                         CornerRadius="5" 
                                         BorderThickness="2"
                                         HorizontalAlignment="Left"
                                         
                                          >
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="Transparent" />
                                        </Border.BorderBrush>
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,1"
                           StartPoint="0,0">
                        <GradientStop Color="Transparent"
                      Offset="0" />
                        <GradientStop Color="Transparent"
                      Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
                        <GradientStop Color="{DynamicResource ControlMediumColor}"
                      Offset="0" />
                        <GradientStop Color="{DynamicResource ControlDarkColor}"
                      Offset="1" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <DataTrigger Binding="{Binding Status}" Value="Sending">
                    <Setter Property="Foreground" >
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
                                <GradientStop Color="{DynamicResource ColorAbort}" Offset="0" />
                                <GradientStop Color="{DynamicResource ColorAbortLight}"  Offset="1" />
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>

                    


                </DataTrigger>
                
                
                
                
                <!--<DataTrigger Binding="{Binding Priority}" Value="1">
                    <Setter Property="Fill" Value="{StaticResource NormalPriorityBrush}" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Priority}" Value="2">
                    <Setter Property="Fill" Value="{StaticResource HighPriorityBrush}" />
                </DataTrigger>-->
            </Style.Triggers>
        </Style>
 

    </Application.Resources>
</Application>
